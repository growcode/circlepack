{"version":3,"file":"circlepack.umd.js","sources":["../../src/Vector2.js","../../src/CirclePackManager.js","../../src/CirclePackPoint.js"],"sourcesContent":["export default class Vector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  add(vec) {\n    this.x += vec.x;\n    this.y += vec.y;\n\n    return this;\n  }\n\n  copy(vec) {\n    this.x = vec.x;\n    this.y = vec.y;\n\n    return this;\n  }\n\n  distanceTo(vec) {\n    return Math.sqrt(this.distanceToSquared(vec));\n  }\n\n  distanceToSquared(vec) {\n    const dx = this.x - vec.x;\n    const dy = this.y - vec.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  divideScalar(scalar) {\n    this.x /= scalar;\n    this.y /= scalar;\n\n    return this;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  sub(vec) {\n    this.x -= vec.x;\n    this.y -= vec.y;\n\n    return this;\n  }\n\n  subVectors(vec, vec2) {\n    this.x = vec.x - vec2.x;\n    this.y = vec.y - vec2.y;\n\n    return this;\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class CirclePackManager {\n  constructor(opts = {}) {\n    this.tightness = 1;\n    this.active = true;\n    this.points = [];\n    this.center = opts.center || new Vector2();\n    this.area = 0;\n    this.radius = 0;\n    this.updateCallback = opts.onUpdate || null;\n\n    // for optional interaction. positioned offscreen initially\n    this.mouse = new Vector2(window.innerHeight * 2, window.innerHeight * 2);\n    this.mouseRadius = 100;\n    this.mouseInteractive = true;\n\n    this._tmpPointA = new Vector2();\n    this._tmpPointB = new Vector2();\n    this._tmpVec = new Vector2();\n  }\n\n  calculateArea() {\n    this.area = 0;\n\n    for (let i = 0, total = this.points.length; i < total; i += 1) {\n      this.area += this.points[i].radius * this.points[i].radius * Math.PI;\n    }\n\n    this.radius = Math.sqrt(this.area / Math.PI);\n  }\n\n  update() {\n    if (!this.active) { return; }\n\n    // pre-instantiate vars so we aren't doing it on each iteration\n    let dist;\n    let radii;\n    let inverseForce;\n    const pointTotal = this.points.length;\n\n    // check every point against every other point\n    for (let i = 0; i < pointTotal; i += 1) {\n      for (let j = 0; j < pointTotal; j += 1) {\n        if (j !== i) { // don't compare this point to itself\n          dist = this.points[i].position.distanceToSquared(this.points[j].position);\n          radii = (this.points[i].radius + this.points[j].radius) / 3;\n\n          if (dist < radii * radii) {\n            // get direction between points\n            this._tmpVec.subVectors(this.points[i].position, this.points[j].position).normalize();\n\n            // applying an inverse force helps points come to rest\n            inverseForce = (radii - Math.sqrt(dist));\n            this._tmpVec.multiplyScalar(inverseForce / 3);\n\n            // adjust velocities based on previously calculated distance and direction\n            this.points[i].velocity.add(this._tmpVec);\n            this.points[j].velocity.sub(this._tmpVec);\n          }\n        }\n      }\n\n      this.points[i].update();\n    }\n\n    if (this.updateCallback) {\n      this.updateCallback.call();\n    }\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class Point {\n  constructor(opts = {}) {\n    this.position = new Vector2(opts.x, opts.y);\n    this.velocity = new Vector2();\n    this.radius = opts.radius;\n    this.points = opts.pointsArray;\n    this.manager = opts.manager; // reference to CirclePackManager instance\n\n    this.index = opts.index;\n    this._tmpVec = new Vector2(); // reused for various calculations\n\n    this.updateBackingArray();\n  }\n\n  update() {\n    // apply gravitational force. this moves points towards the manager's defined center at all times\n    const _dist = this.position.distanceTo(this.manager.center);\n    this._tmpVec.subVectors(this.manager.center, this.position).multiplyScalar(_dist / 100000000); // magic numbery. really not sure\n\n    // multiply the gravitational force if circle is outside of the container area.\n    if (_dist > this.manager.radius * (1 - this.manager.tightness)) {\n      this._tmpVec.multiplyScalar(500);\n    }\n\n    this.velocity.add(this._tmpVec);\n\n    if (this.manager.mouseInteractive) {\n      const dist = this.manager.mouse.distanceTo(this.position);\n\n      if (dist < this.manager.mouseRadius) {\n        this._tmpVec.subVectors(this.position, this.manager.mouse).normalize();\n        this.velocity.add(this._tmpVec);\n      }\n    }\n\n    // apply friction and update position based on new velocity\n    this.velocity.multiplyScalar(0.9);\n    this.position.add(this.velocity);\n\n    // apply position to backing array\n    this.updateBackingArray();\n  }\n\n  updateBackingArray() {\n    this.points[this.index] = this.position.x;\n    this.points[this.index + 1] = this.position.y;\n  }\n}\n"],"names":["Vector2","x","y","add","vec","copy","distanceTo","Math","sqrt","distanceToSquared","dx","dy","divideScalar","scalar","length","multiplyScalar","normalize","set","sub","subVectors","vec2","CirclePackManager","opts","tightness","active","points","center","area","radius","updateCallback","onUpdate","mouse","window","innerHeight","mouseRadius","mouseInteractive","_tmpPointA","_tmpPointB","_tmpVec","calculateArea","i","total","PI","update","dist","radii","inverseForce","pointTotal","j","position","velocity","call","Point","pointsArray","manager","index","updateBackingArray","_dist"],"mappings":"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"}