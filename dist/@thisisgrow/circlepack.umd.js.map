{"version":3,"file":"circlepack.umd.js","sources":["../../src/Vector2.js","../../src/CirclePackPoint.js","../../src/CirclePackManager.js"],"sourcesContent":["export default class Vector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  add(vec) {\n    this.x += vec.x;\n    this.y += vec.y;\n\n    return this;\n  }\n\n  copy(vec) {\n    this.x = vec.x;\n    this.y = vec.y;\n\n    return this;\n  }\n\n  distanceTo(vec) {\n    return Math.sqrt(this.distanceToSquared(vec));\n  }\n\n  distanceToSquared(vec) {\n    const dx = this.x - vec.x;\n    const dy = this.y - vec.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  divideScalar(scalar) {\n    this.x /= scalar;\n    this.y /= scalar;\n\n    return this;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  sub(vec) {\n    this.x -= vec.x;\n    this.y -= vec.y;\n\n    return this;\n  }\n\n  subVectors(vec, vec2) {\n    this.x = vec.x - vec2.x;\n    this.y = vec.y - vec2.y;\n\n    return this;\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class Point {\n  constructor(opts = {}) {\n    this.position = new Vector2(opts.x, opts.y);\n    this.velocity = new Vector2();\n    this.radius = opts.radius;\n    this.manager = opts.manager;\n\n    this.index = opts.index * 2;\n    this._tmpVec = new Vector2(); // reused for various calculations\n\n    this.updateBackingArray();\n  }\n\n  update() {\n    // apply gravitational force. this moves points towards the manager's defined center at all times\n    const _dist = this.position.distanceTo(this.manager.center);\n    this._tmpVec.subVectors(this.manager.center, this.position).multiplyScalar(_dist / 100000000); // magic numbery. really not sure\n\n    // multiply the gravitational force if circle is outside of the container area.\n    if (_dist > this.manager.radius * (1 - this.manager.tightness)) {\n      this._tmpVec.multiplyScalar(500);\n    }\n\n    this.velocity.add(this._tmpVec);\n\n    if (this.manager.mouseInteractive) {\n      const dist = this.manager.mouse.distanceTo(this.position);\n\n      if (dist < this.manager.mouseRadius) {\n        this._tmpVec.subVectors(this.position, this.manager.mouse).normalize();\n        this.velocity.add(this._tmpVec);\n      }\n    }\n\n    // apply friction and update position based on new velocity\n    this.velocity.multiplyScalar(0.9);\n    this.position.add(this.velocity);\n\n    // apply position to backing array\n    this.updateBackingArray();\n  }\n\n  updateBackingArray() {\n    this.manager.pointsArray[this.index] = this.position.x;\n    this.manager.pointsArray[this.index + 1] = this.position.y;\n  }\n}\n","import Vector2 from './Vector2';\nimport CirclePackPoint from './CirclePackPoint';\n\nexport default class CirclePackManager {\n  constructor(opts = {}) {\n    this.tightness = 1;\n    this.active = true;\n    this.points = [];\n    this.pointsArray = new Float32Array(opts.size || 100);\n    this.center = opts.center || new Vector2();\n    this.area = 0;\n    this.radius = 0;\n    this.updateCallback = opts.onUpdate || null;\n\n    // for optional interaction. positioned offscreen initially\n    this.mouse = new Vector2(window.innerHeight * 2, window.innerHeight * 2);\n    this.mouseRadius = 100;\n    this.mouseInteractive = true;\n\n    this._tmpVec = new Vector2();\n  }\n\n  calculateArea() {\n    this.area = 0;\n\n    for (let i = 0, total = this.points.length; i < total; i += 1) {\n      this.area += this.points[i].radius * this.points[i].radius * Math.PI;\n    }\n\n    this.radius = Math.sqrt(this.area / Math.PI);\n  }\n\n  reset(size) {\n    this.points = [];\n    this.pointsArray = new Float32Array(size * 2);\n  }\n\n  addPoint(x, y, radius) {\n    this.points.push(new CirclePackPoint({\n      x,\n      y,\n      radius,\n      index: this.points.length,\n      manager: this,\n    }));\n  }\n\n  update() {\n    if (!this.active) { return; }\n\n    // pre-instantiate vars so we aren't doing it on each iteration\n    let dist;\n    let radii;\n    let inverseForce;\n    const pointTotal = this.points.length;\n\n    // check every point against every other point\n    for (let i = 0; i < pointTotal; i += 1) {\n      for (let j = 0; j < pointTotal; j += 1) {\n        if (j !== i) { // don't compare this point to itself\n          dist = this.points[i].position.distanceToSquared(this.points[j].position);\n          radii = (this.points[i].radius + this.points[j].radius) / 3;\n\n          if (dist < radii * radii) {\n            // get direction between points\n            this._tmpVec.subVectors(this.points[i].position, this.points[j].position).normalize();\n\n            // applying an inverse force helps points come to rest\n            inverseForce = (radii - Math.sqrt(dist));\n            this._tmpVec.multiplyScalar(inverseForce / 3);\n\n            // adjust velocities based on previously calculated distance and direction\n            this.points[i].velocity.add(this._tmpVec);\n            this.points[j].velocity.sub(this._tmpVec);\n          }\n        }\n      }\n\n      this.points[i].update();\n    }\n\n    if (this.updateCallback) {\n      this.updateCallback.call();\n    }\n  }\n}\n"],"names":["Vector2","x","y","add","vec","copy","distanceTo","Math","sqrt","distanceToSquared","dx","dy","divideScalar","scalar","length","multiplyScalar","normalize","set","sub","subVectors","vec2","Point","opts","position","velocity","radius","manager","index","_tmpVec","updateBackingArray","update","_dist","center","tightness","mouseInteractive","dist","mouse","mouseRadius","pointsArray","CirclePackManager","active","points","Float32Array","size","area","updateCallback","onUpdate","window","innerHeight","calculateArea","i","total","PI","reset","addPoint","push","CirclePackPoint","radii","inverseForce","pointTotal","j","call"],"mappings":"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"}