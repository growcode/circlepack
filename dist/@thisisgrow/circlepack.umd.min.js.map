{"version":3,"file":"circlepack.umd.min.js","sources":["../../src/Vector2.js","../../src/CirclePackManager.js","../../src/CirclePackPoint.js"],"sourcesContent":["export default class Vector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  add(vec) {\n    this.x += vec.x;\n    this.y += vec.y;\n\n    return this;\n  }\n\n  copy(vec) {\n    this.x = vec.x;\n    this.y = vec.y;\n\n    return this;\n  }\n\n  distanceTo(vec) {\n    return Math.sqrt(this.distanceToSquared(vec));\n  }\n\n  distanceToSquared(vec) {\n    const dx = this.x - vec.x;\n    const dy = this.y - vec.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  divideScalar(scalar) {\n    this.x /= scalar;\n    this.y /= scalar;\n\n    return this;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  sub(vec) {\n    this.x -= vec.x;\n    this.y -= vec.y;\n\n    return this;\n  }\n\n  subVectors(vec, vec2) {\n    this.x = vec.x - vec2.x;\n    this.y = vec.y - vec2.y;\n\n    return this;\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class CirclePackManager {\n  constructor(opts = {}) {\n    this.tightness = 0.5;\n    this.active = true;\n    this.points = [];\n    this.center = opts.center || new Vector2();\n    this.volume = 0;\n    this.updateCallback = opts.onUpdate || null;\n\n    // for optional interaction. positioned offscreen initially\n    this.mouse = new Vector2(window.innerHeight * 2, window.innerHeight * 2);\n    this.mouseRadius = 100;\n    this.mouseInteractive = true;\n\n    this._tmpPointA = new Vector2();\n    this._tmpPointB = new Vector2();\n    this._tmpVec = new Vector2();\n  }\n\n  calculateVolume() {\n    this.volume = 0;\n\n    for (let i = 0, total = this.points.length; i < total; i += 1) {\n      this.volume += this.points[i].radius;\n    }\n  }\n\n  update() {\n    if (!this.active) { return; }\n\n    let dist;\n    let radii;\n    let inverseForce;\n    const pointTotal = this.points.length;\n\n    for (let i = 0; i < pointTotal; i += 1) {\n      for (let j = 0; j < pointTotal; j += 1) {\n        if (j !== i) {\n          dist = this.points[i].position.distanceToSquared(this.points[j].position);\n          radii = (this.points[i].radius + this.points[j].radius) / 3;\n\n          if (dist < radii * radii) {\n            this._tmpVec.subVectors(this.points[i].position, this.points[j].position).normalize();\n\n            inverseForce = (radii - Math.sqrt(dist));\n            this._tmpVec.multiplyScalar(inverseForce / 3);\n\n            this.points[i].velocity.add(this._tmpVec);\n            this.points[j].velocity.sub(this._tmpVec);\n          }\n        }\n      }\n\n      this.points[i].update();\n    }\n\n    if (this.updateCallback) {\n      this.updateCallback.call();\n    }\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class Point {\n  constructor(opts = {}) {\n    this.position = new Vector2(opts.x, opts.y);\n    this.velocity = new Vector2();\n    this.radius = opts.radius;\n    this.points = opts.pointsArray;\n    this.manager = opts.manager; // reference to CirclePackManager instance\n\n    this.index = opts.index;\n    this._tmpVec = new Vector2(); // reused for various calculations\n\n    this.points[this.index] = this.position.x;\n    this.points[this.index + 1] = this.position.y;\n  }\n\n  update() {\n    const _dist = this.position.distanceTo(this.manager.center);\n\n    this._tmpVec.subVectors(this.manager.center, this.position).multiplyScalar(_dist / 100000000);\n\n    if (_dist > (this.manager.volume / 200) * Math.max(3.5, 80 - this.manager.tightness * 100)) {\n      this._tmpVec.multiplyScalar(1000);\n    }\n\n    this.velocity.add(this._tmpVec);\n\n    if (this.manager.mouseInteractive) {\n      const dist = this.manager.mouse.distanceTo(this.position);\n\n      if (dist < this.manager.mouseRadius) {\n        this._tmpVec.subVectors(this.position, this.manager.mouse).normalize();\n        this.velocity.add(this._tmpVec);\n      }\n    }\n\n    this.velocity.multiplyScalar(0.9);\n    this.position.add(this.velocity);\n\n    this.points[this.index] = this.position.x;\n    this.points[this.index + 1] = this.position.y;\n  }\n}\n"],"names":["Vector2","x","y","add","vec","this","copy","distanceTo","Math","sqrt","distanceToSquared","dx","dy","divideScalar","scalar","length","multiplyScalar","normalize","set","sub","subVectors","vec2","CirclePackManager","opts","tightness","active","points","center","volume","updateCallback","onUpdate","mouse","window","innerHeight","mouseRadius","mouseInteractive","_tmpPointA","_tmpPointB","_tmpVec","calculateVolume","i","total","radius","update","dist","radii","inverseForce","pointTotal","j","position","velocity","call","Point","pointsArray","manager","index","_dist","max"],"mappings":"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"}