{"version":3,"file":"circlepack.umd.min.js","sources":["../../src/Vector2.js","../../src/CirclePackManager.js","../../src/CirclePackPoint.js"],"sourcesContent":["export default class Vector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  add(vec) {\n    this.x += vec.x;\n    this.y += vec.y;\n\n    return this;\n  }\n\n  copy(vec) {\n    this.x = vec.x;\n    this.y = vec.y;\n\n    return this;\n  }\n\n  distanceTo(vec) {\n    return Math.sqrt(this.distanceToSquared(vec));\n  }\n\n  distanceToSquared(vec) {\n    const dx = this.x - vec.x;\n    const dy = this.y - vec.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  divideScalar(scalar) {\n    this.x /= scalar;\n    this.y /= scalar;\n\n    return this;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  sub(vec) {\n    this.x -= vec.x;\n    this.y -= vec.y;\n\n    return this;\n  }\n\n  subVectors(vec, vec2) {\n    this.x = vec.x - vec2.x;\n    this.y = vec.y - vec2.y;\n\n    return this;\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class CirclePackManager {\n  constructor(opts = {}) {\n    this.tightness = 1;\n    this.active = true;\n    this.points = [];\n    this.center = opts.center || new Vector2();\n    this.area = 0;\n    this.radius = 0;\n    this.updateCallback = opts.onUpdate || null;\n\n    // for optional interaction. positioned offscreen initially\n    this.mouse = new Vector2(window.innerHeight * 2, window.innerHeight * 2);\n    this.mouseRadius = 100;\n    this.mouseInteractive = true;\n\n    this._tmpPointA = new Vector2();\n    this._tmpPointB = new Vector2();\n    this._tmpVec = new Vector2();\n  }\n\n  calculateArea() {\n    this.area = 0;\n\n    for (let i = 0, total = this.points.length; i < total; i += 1) {\n      this.area += this.points[i].radius * this.points[i].radius * Math.PI;\n    }\n\n    this.radius = Math.sqrt(this.area / Math.PI);\n  }\n\n  update() {\n    if (!this.active) { return; }\n\n    // pre-instantiate vars so we aren't doing it on each iteration\n    let dist;\n    let radii;\n    let inverseForce;\n    const pointTotal = this.points.length;\n\n    // check every point against every other point\n    for (let i = 0; i < pointTotal; i += 1) {\n      for (let j = 0; j < pointTotal; j += 1) {\n        if (j !== i) { // don't compare this point to itself\n          dist = this.points[i].position.distanceToSquared(this.points[j].position);\n          radii = (this.points[i].radius + this.points[j].radius) / 3;\n\n          if (dist < radii * radii) {\n            // get direction between points\n            this._tmpVec.subVectors(this.points[i].position, this.points[j].position).normalize();\n\n            // applying an inverse force helps points come to rest\n            inverseForce = (radii - Math.sqrt(dist));\n            this._tmpVec.multiplyScalar(inverseForce / 3);\n\n            // adjust velocities based on previously calculated distance and direction\n            this.points[i].velocity.add(this._tmpVec);\n            this.points[j].velocity.sub(this._tmpVec);\n          }\n        }\n      }\n\n      this.points[i].update();\n    }\n\n    if (this.updateCallback) {\n      this.updateCallback.call();\n    }\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class Point {\n  constructor(opts = {}) {\n    this.position = new Vector2(opts.x, opts.y);\n    this.velocity = new Vector2();\n    this.radius = opts.radius;\n    this.points = opts.pointsArray;\n    this.manager = opts.manager; // reference to CirclePackManager instance\n\n    this.index = opts.index;\n    this._tmpVec = new Vector2(); // reused for various calculations\n\n    this.updateBackingArray();\n  }\n\n  update() {\n    // apply gravitational force. this moves points towards the manager's defined center at all times\n    const _dist = this.position.distanceTo(this.manager.center);\n    this._tmpVec.subVectors(this.manager.center, this.position).multiplyScalar(_dist / 100000000); // magic numbery. really not sure\n\n    // multiply the gravitational force if circle is outside of the container area.\n    if (_dist > this.manager.radius * (1 - this.manager.tightness)) {\n      this._tmpVec.multiplyScalar(500);\n    }\n\n    this.velocity.add(this._tmpVec);\n\n    if (this.manager.mouseInteractive) {\n      const dist = this.manager.mouse.distanceTo(this.position);\n\n      if (dist < this.manager.mouseRadius) {\n        this._tmpVec.subVectors(this.position, this.manager.mouse).normalize();\n        this.velocity.add(this._tmpVec);\n      }\n    }\n\n    // apply friction and update position based on new velocity\n    this.velocity.multiplyScalar(0.9);\n    this.position.add(this.velocity);\n\n    // apply position to backing array\n    this.updateBackingArray();\n  }\n\n  updateBackingArray() {\n    this.points[this.index] = this.position.x;\n    this.points[this.index + 1] = this.position.y;\n  }\n}\n"],"names":["Vector2","x","y","add","vec","this","copy","distanceTo","Math","sqrt","distanceToSquared","dx","dy","divideScalar","scalar","length","multiplyScalar","normalize","set","sub","subVectors","vec2","CirclePackManager","opts","tightness","active","points","center","area","radius","updateCallback","onUpdate","mouse","window","innerHeight","mouseRadius","mouseInteractive","_tmpPointA","_tmpPointB","_tmpVec","calculateArea","i","total","PI","update","dist","radii","inverseForce","pointTotal","j","position","velocity","call","Point","pointsArray","manager","index","updateBackingArray","_dist"],"mappings":"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"}