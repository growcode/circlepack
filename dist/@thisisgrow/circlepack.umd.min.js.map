{"version":3,"file":"circlepack.umd.min.js","sources":["../../src/CirclePackManager.js","../../src/CirclePackPoint.js"],"sourcesContent":["const THREE = require('three');\n\nexport default class CirclePackManager {\n  constructor(opts = {}) {\n    this.tightness = 0.5;\n    this.active = true;\n    this.points = [];\n    this.center = opts.center;\n    this.volume = 0;\n    this.updateCallback = opts.onUpdate || null;\n\n    // for optional interaction. positioned offscreen initially\n    this.mouse = new THREE.Vector2(window.innerHeight * 2, window.innerHeight * 2);\n    this.mouseRadius = 100;\n    this.mouseInteractive = true;\n\n    this._tmpPointA = new THREE.Vector2();\n    this._tmpPointB = new THREE.Vector2();\n    this._tmpVec = new THREE.Vector2();\n  }\n\n  calculateVolume() {\n    this.volume = 0;\n\n    for (let i = 0, total = this.points.length; i < total; i += 1) {\n      this.volume += this.points[i].radius;\n    }\n  }\n\n  update() {\n    if (!this.active) { return; }\n\n    let dist;\n    let radii;\n    let inverseForce;\n    const pointTotal = this.points.length;\n\n    for (let i = 0; i < pointTotal; i += 1) {\n      for (let j = 0; j < pointTotal; j += 1) {\n        if (j !== i) {\n          dist = this.points[i].position.distanceToSquared(this.points[j].position);\n          radii = (this.points[i].radius + this.points[j].radius) / 3;\n\n          if (dist < radii * radii) {\n            this._tmpVec.subVectors(this.points[i].position, this.points[j].position).normalize();\n\n            inverseForce = (radii - Math.sqrt(dist));\n            this._tmpVec.multiplyScalar(inverseForce / 3);\n\n            this.points[i].velocity.add(this._tmpVec);\n            this.points[j].velocity.sub(this._tmpVec);\n          }\n        }\n      }\n\n      this.points[i].update();\n    }\n\n    if (this.updateCallback) {\n      this.updateCallback.call();\n    }\n  }\n}\n","const THREE = require('three');\n\nexport default class Point {\n  constructor(opts = {}) {\n    this.position = new THREE.Vector2(opts.x, opts.y);\n    this.velocity = new THREE.Vector2();\n    this.radius = opts.radius;\n    this.points = opts.pointsArray;\n    this.manager = opts.manager; // reference to CirclePackManager instance\n\n    this.index = opts.index;\n    this._tmpVec = new THREE.Vector2(); // reused for various calculations\n\n    this.points[this.index] = this.position.x;\n    this.points[this.index + 1] = this.position.y;\n  }\n\n  update() {\n    const _dist = this.position.distanceTo(this.manager.center);\n\n    this._tmpVec.subVectors(this.manager.center, this.position).multiplyScalar(_dist / 100000000);\n\n    if (_dist > (this.manager.volume / 200) * Math.max(3.5, 80 - this.manager.tightness * 100)) {\n      this._tmpVec.multiplyScalar(1000);\n    }\n\n    this.velocity.add(this._tmpVec);\n\n    if (this.manager.mouseInteractive) {\n      const dist = this.manager.mouse.distanceTo(this.position);\n\n      if (dist < this.manager.mouseRadius) {\n        this._tmpVec.subVectors(this.position, this.manager.mouse).normalize();\n        this.velocity.add(this._tmpVec);\n      }\n    }\n\n    this.velocity.multiplyScalar(0.9);\n    this.position.add(this.velocity);\n\n    this.points[this.index] = this.position.x;\n    this.points[this.index + 1] = this.position.y;\n  }\n}\n"],"names":["THREE","require","CirclePackManager","opts","tightness","active","points","center","volume","updateCallback","onUpdate","mouse","Vector2","window","innerHeight","mouseRadius","mouseInteractive","_tmpPointA","_tmpPointB","_tmpVec","calculateVolume","i","total","this","length","radius","update","dist","radii","inverseForce","pointTotal","j","position","distanceToSquared","subVectors","normalize","Math","sqrt","multiplyScalar","velocity","add","sub","call","Point","x","y","pointsArray","manager","index","_dist","distanceTo","max"],"mappings":"4MAAA,IAAMA,EAAQC,QAAQ,SAEDC,wBACPC,YAAAA,IAAAA,EAAO,SACZC,UAAY,QACZC,QAAS,OACTC,OAAS,QACTC,OAASJ,EAAKI,YACdC,OAAS,OACTC,eAAiBN,EAAKO,UAAY,UAGlCC,MAAQ,IAAIX,EAAMY,QAA6B,EAArBC,OAAOC,YAAsC,EAArBD,OAAOC,kBACzDC,YAAc,SACdC,kBAAmB,OAEnBC,WAAa,IAAIjB,EAAMY,aACvBM,WAAa,IAAIlB,EAAMY,aACvBO,QAAU,IAAInB,EAAMY,mCAG3BQ,gBAAA,gBACOZ,OAAS,MAET,IAAIa,EAAI,EAAGC,EAAQC,KAAKjB,OAAOkB,OAAQH,EAAIC,EAAOD,GAAK,OACrDb,QAAUe,KAAKjB,OAAOe,GAAGI,UAIlCC,OAAA,cACOH,KAAKlB,gBAENsB,EACAC,EACAC,EACEC,EAAaP,KAAKjB,OAAOkB,OAEtBH,EAAI,EAAGA,EAAIS,EAAYT,GAAK,EAAG,KACjC,IAAIU,EAAI,EAAGA,EAAID,EAAYC,GAAK,EAC/BA,IAAMV,IACRM,EAAOJ,KAAKjB,OAAOe,GAAGW,SAASC,kBAAkBV,KAAKjB,OAAOyB,GAAGC,YAChEJ,GAASL,KAAKjB,OAAOe,GAAGI,OAASF,KAAKjB,OAAOyB,GAAGN,QAAU,GAEvCG,SACZT,QAAQe,WAAWX,KAAKjB,OAAOe,GAAGW,SAAUT,KAAKjB,OAAOyB,GAAGC,UAAUG,YAE1EN,EAAgBD,EAAQQ,KAAKC,KAAKV,QAC7BR,QAAQmB,eAAeT,EAAe,QAEtCvB,OAAOe,GAAGkB,SAASC,IAAIjB,KAAKJ,cAC5Bb,OAAOyB,GAAGQ,SAASE,IAAIlB,KAAKJ,eAKlCb,OAAOe,GAAGK,SAGbH,KAAKd,qBACFA,eAAeiC,cC3DpB1C,EAAQC,QAAQ,SAED0C,wBACPxC,YAAAA,IAAAA,EAAO,SACZ6B,SAAW,IAAIhC,EAAMY,QAAQT,EAAKyC,EAAGzC,EAAK0C,QAC1CN,SAAW,IAAIvC,EAAMY,aACrBa,OAAStB,EAAKsB,YACdnB,OAASH,EAAK2C,iBACdC,QAAU5C,EAAK4C,aAEfC,MAAQ7C,EAAK6C,WACb7B,QAAU,IAAInB,EAAMY,aAEpBN,OAAOiB,KAAKyB,OAASzB,KAAKS,SAASY,OACnCtC,OAAOiB,KAAKyB,MAAQ,GAAKzB,KAAKS,SAASa,qBAG9CnB,OAAA,eACQuB,EAAQ1B,KAAKS,SAASkB,WAAW3B,KAAKwB,QAAQxC,cAE/CY,QAAQe,WAAWX,KAAKwB,QAAQxC,OAAQgB,KAAKS,UAAUM,eAAeW,EAAQ,KAE/EA,EAAS1B,KAAKwB,QAAQvC,OAAS,IAAO4B,KAAKe,IAAI,IAAK,GAA8B,IAAzB5B,KAAKwB,QAAQ3C,iBACnEe,QAAQmB,eAAe,UAGzBC,SAASC,IAAIjB,KAAKJ,SAEnBI,KAAKwB,QAAQ/B,oBACFO,KAAKwB,QAAQpC,MAAMuC,WAAW3B,KAAKS,UAErCT,KAAKwB,QAAQhC,mBACjBI,QAAQe,WAAWX,KAAKS,SAAUT,KAAKwB,QAAQpC,OAAOwB,iBACtDI,SAASC,IAAIjB,KAAKJ,gBAItBoB,SAASD,eAAe,SACxBN,SAASQ,IAAIjB,KAAKgB,eAElBjC,OAAOiB,KAAKyB,OAASzB,KAAKS,SAASY,OACnCtC,OAAOiB,KAAKyB,MAAQ,GAAKzB,KAAKS,SAASa"}